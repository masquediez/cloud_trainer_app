name: Terraform and Ansible Workflow

on:
  push:
    branches:
      - main

jobs:
  terraform-vpc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform_setup/vpc

      - name: Terraform Format Check
        run: terraform fmt --check
        working-directory: ./terraform_setup/vpc

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform_setup/vpc

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform_setup/vpc

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform_setup/vpc

  terraform-ec2:
    runs-on: ubuntu-latest
    needs: terraform-vpc
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform_setup/ec2

      - name: Terraform Format Check
        run: terraform fmt
        working-directory: ./terraform_setup/ec2

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform_setup/ec2

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform_setup/ec2

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform_setup/ec2

      - name: Extract IP addresses
        id: extract_ips
        run: |
          echo "NGINX_IP=$(terraform output -raw nginx_instance_ip)" >> $GITHUB_ENV
          echo "HTTPD_IP=$(terraform output -raw httpd_instance_ip)" >> $GITHUB_ENV
        working-directory: ./terraform_setup/ec2

  ansible-deploy:
    runs-on: ubuntu-latest
    needs: terraform-ec2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH Key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Ansible Playbook for Nginx
        run: |
          ansible-playbook ansible_workflow/playbook.yml -i "${{ env.NGINX_IP }}," -u ${{ secrets.SSH_USER }} --private-key private_key.pem --extra-vars "host=nginx"
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Run Ansible Playbook for Httpd
        run: |
          ansible-playbook ansible_workflow/playbook.yml -i "${{ env.HTTPD_IP }}," -u ${{ secrets.SSH_USER }} --private-key private_key.pem --extra-vars "host=httpd"
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"

      - name: Clean up
        run: rm -f private_key.pem
